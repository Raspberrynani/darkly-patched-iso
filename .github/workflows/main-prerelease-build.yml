name: Automatic Pre-release Build

# This workflow triggers on every push to the 'main' branch
on:
  push:
    branches:
      - main

jobs:
  build-and-create-prerelease:
    name: Build ISO and Create Pre-release
    runs-on: ubuntu-latest
    permissions:
      contents: write # Required to create a release

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Remove .gitkeep files
        run: |
          find . -type f -name ".gitkeep" -delete
          echo "All .gitkeep files have been removed."

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y squashfs-tools genisoimage

      - name: Create filesystem.squashfs
        run: |
          # Remove existing squashfs file to ensure clean build
          sudo rm -f iso-root/casper/filesystem.squashfs
          # Create squashfs without the problematic flags - match your working command exactly
          sudo mksquashfs squashfs-root iso-root/casper/filesystem.squashfs
          # Fix permissions after sudo operation
          sudo chown $USER:$USER iso-root/casper/filesystem.squashfs

      - name: Update MD5 Hashes
        run: |
          cd iso-root
          rm -f md5sum.txt
          find . -type f -print0 | xargs -0 md5sum > md5sum.txt
          sed -i '/md5sum.txt/d' md5sum.txt
          cd ..

      - name: Generate dynamic names
        run: |
          # Generate ISO name with commit hash
          echo "ISO_NAME=darkly-modified-prerelease-main-$(echo ${{ github.sha }} | cut -c1-8).iso" >> $GITHUB_ENV
          # Generate tag name with timestamp (using valid characters only)
          echo "TAG_NAME=nightly-$(date -u +'%Y.%m.%d-%H%M%S')" >> $GITHUB_ENV
          # Generate build timestamp for release body
          echo "BUILD_TIME=$(date -u +'%Y-%m-%d %H:%M:%S UTC')" >> $GITHUB_ENV

      - name: Build the bootable ISO
        run: |
          mkisofs -r -J -b isolinux/isolinux.bin -c isolinux/boot.cat \
          -no-emul-boot -boot-load-size 4 -boot-info-table \
          -o ${{ env.ISO_NAME }} iso-root/

      - name: Create Pre-release
        uses: softprops/action-gh-release@v2
        with:
          # This marks the release as a 'Pre-release' in GitHub
          prerelease: true
          # Use the generated tag name consistently
          tag_name: ${{ env.TAG_NAME }}
          name: "Nightly Build - ${{ env.TAG_NAME }}"
          body: |
            This is an automated nightly build from the `main` branch.

            **Build Details:**
            - Commit: ${{ github.sha }}
            - Branch: main
            - Build Time: ${{ env.BUILD_TIME }}

            **Files:**
            - `${{ env.ISO_NAME }}` - Custom ISO build
          files: |
            ${{ env.ISO_NAME }}
